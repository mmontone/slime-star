This is ansicl, produced by makeinfo version 6.7 from temp.texi.

INFO-DIR-SECTION Programming
START-INFO-DIR-ENTRY
* ANSI Common Lisp: (ansicl).    Draft ANSI Common Lisp standard (dpANS3R).
END-INFO-DIR-ENTRY


File: ansicl,  Node: List of Figures,  Prev: Symbol Index,  Up: Top

List of Figures
***************

* Menu:

* Figure 1.1: fig1.1.                    Notations for NIL
* Figure 1.2: fig1.2.                    Deprecated Functions
* Figure 1.3: fig1.3.                    Functions with Deprecated ...
* Figure 1.4: fig1.4.                    Symbols in the COMMON-LISP ...
* Figure 1.5: fig1.5.                    Symbols in the COMMON-LISP ...
* Figure 1.6: fig1.6.                    Symbols in the COMMON-LISP ...
* Figure 1.7: fig1.7.                    Symbols in the COMMON-LISP ...
* Figure 1.8: fig1.8.                    Symbols in the COMMON-LISP ...
* Figure 1.9: fig1.9.                    Symbols in the COMMON-LISP ...
* Figure 1.10: fig1.10.                  Symbols in the COMMON-LISP ...
* Figure 1.11: fig1.11.                  Symbols in the COMMON-LISP ...
* Figure 1.12: fig1.12.                  Symbols in the COMMON-LISP ...
* Figure 1.13: fig1.13.                  Symbols in the COMMON-LISP ...
* Figure 1.14: fig1.14.                  Symbols in the COMMON-LISP ...
* Figure 1.15: fig1.15.                  Symbols in the COMMON-LISP ...
* Figure 2.1: fig2.1.                    Readtable defined names
* Figure 2.2: fig2.2.                    Variables that influence ...
* Figure 2.3: fig2.3.                    Standard Character ...
* Figure 2.4: fig2.4.                    Standard Character ...
* Figure 2.5: StdCharsThree.             Standard Character ...
* Figure 2.6: PossibleSyntaxTypes.       Possible Character Syntax ...
* Figure 2.7: CharSyntaxTypesInStdSyntax.Character Syntax Types in ...
* Figure 2.8: ConstituentTraitsOfStdChars.
                                         Constituent Traits of ...
* Figure 2.9: SyntaxForNumericTokens.    Syntax for Numeric Tokens
* Figure 2.10: fig2.10.                  Examples of reserved tokens
* Figure 2.11: fig2.11.                  Examples of symbols
* Figure 2.12: fig2.12.                  Examples of symbols or ...
* Figure 2.13: fig2.13.                  Examples of Ratios
* Figure 2.14: fig2.14.                  Examples of Floating-point ...
* Figure 2.15: fig2.15.                  Examples of the printed ...
* Figure 2.16: fig2.16.                  Examples of the printed ...
* Figure 2.17: fig2.17.                  Valid patterns for tokens
* Figure 2.18: fig2.18.                  Examples of the use of ...
* Figure 2.19: fig2.19.                  Standard # Dispatching ...
* Figure 2.20: fig2.20.                  Radix Indicator Example
* Figure 2.21: fig2.21.                  Complex Number Example
* Figure 3.1: fig3.1.                    Some Defined Names ...
* Figure 3.2: CLSpecialOps.              Common Lisp Special ...
* Figure 3.3: fig3.3.                    Defined names applicable to ...
* Figure 3.4: fig3.4.                    Some function-related ...
* Figure 3.5: fig3.5.                    Some operators applicable ...
* Figure 3.6: fig3.6.                    Defined names applicable to ...
* Figure 3.7: fig3.7.                    EVAL-WHEN processing
* Figure 3.8: fig3.8.                    Defining Macros That Affect ...
* Figure 3.9: fig3.9.                    Common Lisp Declaration ...
* Figure 3.10: fig3.10.                  What Kind of Lambda Lists ...
* Figure 3.11: fig3.11.                  Defined names applicable to ...
* Figure 3.12: fig3.12.                  Standardized Operators that ...
* Figure 3.13: fig3.13.                  Lambda List Keywords used ...
* Figure 3.14: fig3.14.                  Lambda List Keywords used ...
* Figure 3.15: fig3.15.                  Standardized Operators that ...
* Figure 3.16: fig3.16.                  Lambda List Keywords used ...
* Figure 3.17: fig3.17.                  Operators that use Macro ...
* Figure 3.18: fig3.18.                  Lambda List Keywords used ...
* Figure 3.19: fig3.19.                  Lambda List Keywords used ...
* Figure 3.20: fig3.20.                  Lambda List Keywords used ...
* Figure 3.21: fig3.21.                  Lambda List Keywords used ...
* Figure 3.22: fig3.22.                  Global Declaration ...
* Figure 3.23: fig3.23.                  Standardized Forms In Which ...
* Figure 3.24: fig3.24.                  Local Declaration Specifiers
* Figure 3.25: fig3.25.                  Optimize qualities
* Figure 4.1: TypeInfoXrefs.             Cross-References to Data ...
* Figure 4.2: StandardizedAtomicTypeSpecs.
                                         Standardized Atomic Type ...
* Figure 4.3: StandardizedCompoundTypeSpecNames.
                                         Standardized Compound Type ...
* Figure 4.4: fig4.4.                    Standardized Compound-Only ...
* Figure 4.5: TypesAndDeclsNames.        Defined names relating to ...
* Figure 4.6: StandardizedTypeSpecifierNames.
                                         Standardized Type Specifier ...
* Figure 4.7: ObjectSystemClasses.       Object System Classes
* Figure 4.8: ClassTypeCorrespondence.   Classes that correspond to ...
* Figure 4.9: fig4.9.                    Result possibilities for ...
* Figure 5.1: fig5.1.                    Examples of setf
* Figure 5.2: fig5.2.                    Operators relating to ...
* Figure 5.3: fig5.3.                    Sample Setf Expansion of a ...
* Figure 5.4: fig5.4.                    Sample Setf Expansion of a ...
* Figure 5.5: fig5.5.                    Sample Setf Expansion of a ...
* Figure 5.6: fig5.6.                    Sample Setf Expansion of a ...
* Figure 5.7: fig5.7.                    Functions that setf can be ...
* Figure 5.8: fig5.8.                    Functions that setf can be ...
* Figure 5.9: fig5.9.                    Read-Modify-Write Macros
* Figure 5.10: fig5.10.                  Macros that have implicit ...
* Figure 5.11: fig5.11.                  Operators that always ...
* Figure 5.12: fig5.12.                  Summary and priorities of ...
* Figure 5.13: fig5.13.                  Summary and priorities of ...
* Figure 7.1: StdMethDefOps.             Standardized ...
* Figure 7.2: fig7.2.                    Built-in Method Combination ...
* Figure 9.1: StandardizedConditionTypes.Standardized Condition Types
* Figure 9.2: fig9.2.                    Operators that define and ...
* Figure 9.3: fig9.3.                    Operators that read ...
* Figure 9.4: fig9.4.                    Operators relating to ...
* Figure 9.5: fig9.5.                    Defined names relating to ...
* Figure 9.6: fig9.6.                    Defined names relating to ...
* Figure 9.7: fig9.7.                    Operators relating to ...
* Figure 10.1: fig10.1.                  Property list defined names
* Figure 10.2: fig10.2.                  Symbol creation and inquiry ...
* Figure 11.1: fig11.1.                  Some Defined Names related ...
* Figure 11.2: fig11.2.                  Standardized Package Names
* Figure 12.1: fig12.1.                  Operators relating to ...
* Figure 12.2: fig12.2.                  Defined names relating to ...
* Figure 12.3: fig12.3.                  Operators for numeric ...
* Figure 12.4: fig12.4.                  Defined names relating to ...
* Figure 12.5: fig12.5.                  Defined names relating to ...
* Figure 12.6: fig12.6.                  Defined names relating to ...
* Figure 12.7: fig12.7.                  Defined names relating to ...
* Figure 12.8: fig12.8.                  Functions Affected by Rule ...
* Figure 12.9: fig12.9.                  Trigonometric Identities ...
* Figure 12.10: fig12.10.                Quadrant Numbering for ...
* Figure 12.11: fig12.11.                Random-state defined names
* Figure 12.12: fig12.12.                Recommended Minimum ...
* Figure 12.13: fig12.13.                Uses of /=, =, <, >, <=, ...
* Figure 12.14: fig12.14.                Mathematical definition of ...
* Figure 12.15: fig12.15.                Quadrant information for ...
* Figure 12.16: fig12.16.                Mathematical definitions ...
* Figure 12.17: fig12.17.                Bit-Wise Logical Operations
* Figure 12.18: fig12.18.                Bit-wise Logical Operations ...
* Figure 13.1: fig13.1.                  Character defined names – 1
* Figure 13.2: fig13.2.                  Character defined names – 2
* Figure 14.1: fig14.1.                  Some defined names relating ...
* Figure 14.2: fig14.2.                  Some defined names relating ...
* Figure 14.3: fig14.3.                  Some defined names relating ...
* Figure 14.4: fig14.4.                  Some defined names related ...
* Figure 14.5: fig14.5.                  Some defined names related ...
* Figure 14.6: fig14.6.                  CAR and CDR variants
* Figure 15.1: fig15.1.                  General Purpose ...
* Figure 15.2: fig15.2.                  Operators that Manipulate ...
* Figure 15.3: fig15.3.                  Operators that Manipulate ...
* Figure 15.4: fig15.4.                  Bit-wise Logical Operations ...
* Figure 17.1: SequenceFunctions.        Standardized Sequence ...
* Figure 17.2: fig17.2.                  Operators that have ...
* Figure 17.3: fig17.3.                  Operators that have ...
* Figure 18.1: fig18.1.                  Hash-table defined names
* Figure 19.1: fig19.1.                  Pathname Operations
* Figure 19.2: PathnameCaseFuns.         Pathname functions using a ...
* Figure 19.3: fig19.3.                  Special Markers In ...
* Figure 20.1: fig20.1.                  File and Directory ...
* Figure 20.2: fig20.2.                  File Functions that Treat ...
* Figure 20.3: fig20.3.                  File Functions where Closed ...
* Figure 21.1: fig21.1.                  Some General-Purpose Stream ...
* Figure 21.2: InputStreamOps.           Operators relating to Input ...
* Figure 21.3: OutputStreamOps.          Operators relating to ...
* Figure 21.4: fig21.4.                  Operators relating to ...
* Figure 21.5: fig21.5.                  Defined Names related to ...
* Figure 21.6: StandardizedStreamVars.   Standardized Stream ...
* Figure 21.7: OpenOrClosedStreamOps.    Operators that accept ...
* Figure 21.8: fig21.8.                  Operators that accept Open ...
* Figure 22.1: StdPrinterControlVars.    Standardized Printer ...
* Figure 22.2: fig22.2.                  Additional Influences on ...
* Figure 22.3: fig22.3.                  Example of Logical Blocks, ...
* Figure 22.4: fig22.4.                  Defined names related to ...
* Figure 22.5: fig22.5.                  Format directives related ...
* Figure 22.6: fig22.6.                  Examples of format control ...
* Figure 22.7: fig22.7.                  Argument correspondences ...
* Figure 23.1: fig23.1.                  Values of standard control ...
* Figure 24.1: fig24.1.                  Features examples
* Figure 25.1: fig25.1.                  Variables maintained by the ...
* Figure 25.2: fig25.2.                  Defined names relating to ...
* Figure 25.3: fig25.3.                  Defined names relating to ...
* Figure 25.4: fig25.4.                  Defined names involving ...
* Figure 25.5: fig25.5.                  Defined names involving ...
* Figure 25.6: fig25.6.                  Defined names involving ...
* Figure 25.7: fig25.7.                  Defined names involving ...
* Figure 25.8: fig25.8.                  Defined names involving ...
* Figure 26.1: fig26.1.                  Exponent Markers
* Figure 26.2: fig26.2.                  Standardized I/O ...
* Figure 26.3: fig26.3.                  Standardized Iteration Forms
* Figure 26.4: fig26.4.                  Standardized Restart ...

